td = filter(data3x,road == "r1" &timepoint == "08:30:00")
td
arrange(td,date)
z
td = filter(data3x,road == z &timepoint == "08:30:00")
td
arrange(td,date)
s = filter(data3x,road == z,timepoint >"08:00:00")
class(data3x$timepoint)
f = as.character(data3x$timepoint)
class(f)
f[1:5]
f[1:5]>"08:00:00"
y = data3x
y$timepoint=f
head(y)
class(y$timepoint)
data3x=y
s = filter(data3x,road == z,timepoint >"08:00:00")
s = filter(data3x,road == z,timepoint <"08:00:00")
s1 = arrange(s,timepoint)
head(s1)
s$travel
class(s$travel)
s = filter(data3x,road == z,timepoint =="01:00:00")
s
max(s$travel)
min(s$travel)
s = filter(data3x,road == z,timepoint =="02:00:00")
s1 = arrange(s,timepoint)
s1
s1
x
ll = vector()
ww = vector()
zz = vector()
for(i in 1:132)
{
s = filter(data3x,road == x[i],timepoint =="02:00:00")
z1 = max(s$travel)
z2 = max(s$travel)
ll[i] = s$le
ww[i] = s$wi
zz[i] = z1-z2
}
ll
ww
length(ll)
length(x)
ll = vector()
ww = vector()
zz = vector()
for(i in 1:132)
{
s = filter(data3x,road == x[i],timepoint =="02:00:00")
z1 = max(s$travel)
z2 = min(s$travel)
ll[i] = s$le
ww[i] = s$wi
zz[i] = z1-z2
}
zz
library(sqldf)
library(dplyr)
s = filter(data3x,road == z,timepoint =="02:00:00")
s1 = arrange(s,timepoint)
plot(s1)
plot(s1$travel)
s1
s
z
s = filter(data3x,road == "r1",timepoint =="02:00:00")
s1 = arrange(s,timepoint)
s1
plot(s1$date,s1$travel)
plot(s1$travel)
s2$sp = s1$travel/s1$le
s1$sp = s1$travel/s1$le
s1
s1$sp = s1$road/s1$travel
class(s1$travel)
class(s1$road)
s1$sp = s1$le/s1$travel
s1
plot(s1)
plot(s1$sp)
s = filter(data3x,road == "r1")
s1 = arrange(s,timepoint)
s1$sp = s1$le/s1$travel
plot(s1$sp)
s = filter(data3x,road == "r2")
s1 = arrange(s,timepoint)
s1$sp = s1$le/s1$travel
s = filter(data3x,road == "r2")
s1 = arrange(s,timepoint)
s1$sp = s1$le/s1$travel
plot(s1$sp)
s = filter(data3x,road == "r5")
s1 = arrange(s,timepoint)
s1$sp = s1$le/s1$travel
plot(s1$sp)
s2 = sqldf("select avg(sp) as sd ,timepoint from s2 group by timepoint order by timepoint")
s2 = sqldf("select avg(sp) as sd ,timepoint from s1 group by timepoint order by timepoint")
s2
library(ggplot2)
p = ggplot(data =s2,aes(x = timepoint,y = sd))
p=p+scale_x_continuous(name = "timepoint",breaks = c(180,360,540,720),labels=c("6","12","18","24"))
p+geom_point()
p=p+scale_x_discrete(name = "timepoint",breaks = c(180,360,540,720),labels=c("6","12","18","24"))
p+geom_point()
a = seq(1,132)
a
s2$a = a
a = seq(1,720)
s2$a = a
a
p=p+scale_x_continous(name = "timepoint",breaks = c(180,360,540,720),labels=c("6","12","18","24"))
p = ggplot(data =s2,aes(x = timepoint,y = sd))
p=p+scale_x_continuous(name = "timepoint",breaks = c(180,360,540,720),labels=c("6","12","18","24"))
p+geom_point()
p=p+scale_x_discrete(name = "timepoint",breaks = c(180,360,540,720),labels=c("6","12","18","24"))
p+geom_point()
td = sqldf("select * from data3x where road = r1 and timepoint='08:30:00'")
f = td$timepoint
f = as.numeric(f)
td$t = f
p = ggplot(data=td,aes(x = t,y= travel))
p = p+geom_point(alpha=0.6)
p = p+scale_x_continuous(name = "timepoint",breaks = c(180,360,540,720),labels=c("6","12","18","24"))
p
s = filter(data3x,road == "r5")
s1 = arrange(s,timepoint)
s1$sp = s1$le/s1$travel
s2 = sqldf("select avg(sp) as sd ,timepoint from s1 group by timepoint order by timepoint")
a = seq(1,720)
s2$a = a
p = ggplot(data =s2,aes(x = timepoint,y = sd))
p+geom_point()
p=p+scale_x_discrete(name = "timepoint",breaks = c(180,360,540,720),labels=c("6","12","18","24"))
p+geom_point()
p=p+scale_x_continuous(name = "timepoint",breaks = c(180,360,540,720),labels=c("6","12","18","24"))
p+geom_point()
p = ggplot(data =s2,aes(x = a,y = sd))
p=p+scale_x_continuous(name = "timepoint",breaks = c(180,360,540,720),labels=c("6","12","18","24"))
p+geom_point()
s = filter(data3x,road == "r1")
s1 = arrange(s,timepoint)
s1$sp = s1$le/s1$travel
s2 = sqldf("select avg(sp) as sd ,timepoint from s1 group by timepoint order by timepoint")
a = seq(1,720)
s2$a = a
p = ggplot(data =s2,aes(x = a,y = sd))
p=p+scale_x_continuous(name = "timepoint",breaks = c(180,360,540,720),labels=c("6","12","18","24"))
p+geom_point()
s = filter(data3x,road == "r100")
s1 = arrange(s,timepoint)
s1$sp = s1$le/s1$travel
s2 = sqldf("select avg(sp) as sd ,timepoint from s1 group by timepoint order by timepoint")
a = seq(1,720)
s2$a = a
p = ggplot(data =s2,aes(x = a,y = sd))
p=p+scale_x_continuous(name = "timepoint",breaks = c(180,360,540,720),labels=c("6","12","18","24"))
p+geom_point()
s = filter(data3x,road == "r120")
s1 = arrange(s,timepoint)
s1$sp = s1$le/s1$travel
s2 = sqldf("select avg(sp) as sd ,timepoint from s1 group by timepoint order by timepoint")
a = seq(1,720)
s2$a = a
p = ggplot(data =s2,aes(x = a,y = sd))
p=p+scale_x_continuous(name = "timepoint",breaks = c(180,360,540,720),labels=c("6","12","18","24"))
p+geom_point()
seetimespd = function(r)
{
s = filter(data3x,road == r)
s1 = arrange(s,timepoint)
s1$sp = s1$le/s1$travel
s2 = sqldf("select avg(sp) as sd ,timepoint from s1 group by timepoint order by timepoint")
a = seq(1,720)
s2$a = a
p = ggplot(data =s2,aes(x = a,y = sd))
p=p+scale_x_continuous(name = "timepoint",breaks = c(180,360,540,720),labels=c("6","12","18","24"))
p+geom_point()
}
seetimespd("r7")
seetimespd("r9")
seetimespd("r10")
seetimespd("r50")
class(data3x$date)
d = data3x$date
d = as.character(d)
y  = data3x
y$date = d
head(y)
class(y$date)
data3x = y
class(y$date)
class(data3x$date)
head(data3x)
class(data3x$travel)
class(data3x$road)
class(data3x$le)
class(data3x$wi)
class(data3x$timepoint)
f = data3x$road
f = as.character(f)
data3x$road=f
head(data3x)
a = filter(data3x,timepoint == "18:00:00")
head(a)
s = filter(data3x,timepoint == "18:00:00")
s1 = arrange(s,timepoint)
s1$sp = s1$le/s1$travel
head(s1)
s = filter(data3x,timepoint == "18:00:00")
s1 = arrange(s,road)
s1$sp = s1$le/s1$travel
head(s1)
d = c("a","a1","b","3","1","2a")
sort(d)
s2 = sqldf("select avg(sp) as sd from s group by road order by road ")
s2 = sqldf("select avg(sp) as sd from s1 group by road order by road ")
head(s2)
s2
a = seq(1,132)
s2$a = a
s2
p = ggplot(data =s2,aes(x = a,y = sd))
p=p+geom_point()
p
seetimspd("r6")
library(sqldf)
library(dplyr)
library(ggplot2)
seetimespd("r6")
seetimespd("r10")
seetimespd("r20")
x = 0
for(i in 80:100)
{
s = (i+1)*(i+1)*2
s = s/54
x = x+s
}
x
x = 0
for(i in 80:100)
{
s = (i+1)*(i+1)*2
s = s/60
x = x+s
}
x
local({old <- getOption("defaultPackages")
options(defaultPackages = c(old, "geoR"))})
local({old <- getOption("defaultPackages")
options(defaultPackages = c(old, "dplyr"))})
local({old <- getOption("defaultPackages")
options(defaultPackages = c(old, "ggplot2"))})
local({old <- getOption("defaultPackages")
options(defaultPackages = c(old, "sqldf"))})
p = sqldf("select & from aa")
library(dplyr)
library(sqldf)
library(ggplot2)
seetimespd("r7")
,packages()
(,packages())
(.packages())
gl(2,5)
a = gl(2,5)
a+1
as.numeric(a)
class(a)
typeof(a)
model(a)
modol(a)
mode(a)
a = 5
class(a)
typeof(a)
mode(a)
library(glm)
x <- seq(from = -10, to = 10, by = 0.01)
y = exp(x)/(1+exp(x))
library(ggplot2)
p <- ggplot(data = NULL, mapping = aes(x = x,y = y))
p + geom_line(colour = 'blue')
+ annotate('text', x = 1, y = 0.3, label ='y==e^x / 1-e^x', parse = TRUE)
+ ggtitle('Logistic曲线')
x <- seq(from = -10, to = 10, by = 0.01)
y = exp(x)/(1+exp(x))
library(ggplot2)
p <- ggplot(data = NULL, mapping = aes(x = x,y = y))
p = p + geom_line(colour = 'blue')
p
p=p+ annotate('text', x = 1, y = 0.3, label ='y==e^x / 1-e^x', parse = TRUE)
p
p+ ggtitle('Logistic曲线')
install.packages("DAAG")
library(lattice)
library(DAAG)
head(anesthetic)
getwd()
library(RODBC)
odbcDataSources()
a  = odbcDataSources()
a
class(a)
a[1]
a[2]
a[3]
a[4]
names(a) = c(1,2,3,4)
a
rm(ls=list(0))
rm(ls=list())
rm(list=ls())
channel  = odbcconnet("local server")
channel  = odbcConnet("local server")
library(RODBC)
rm(list=ls())
library(RODBC)
channel  = odbcConnet("local server")
channel  = odbcConnect("local server")
sqltables(channel)
sqlTables(channel)
a = sqlTables(channel)
library(dplyr)
b = filter(a,TABLE_SCHEM = "odb")
b = filter(a,TABLE_SCHEM == "odb")
b
b = filter(a,TABLE_SCHEM == "dbo")
b
f = sqlQuery("channel",select * from )
f = sqlQuery("channel",select * from a)
f = sqlQuery("channel","select * from a")
f = sqlQuery(channel,"select * from a")
f
save.image("D:/R空间/test.RData")
rm(list=ls())
l = 1
load("D:/R空间/test.RData")
load("D:/R空间/test.RData")
f
complete.cases(f
)
complete.cases(f[1])
complete.cases(f[,1])
complete.cases(f[1,1])
complete.cases(f[1,])
library(VIM)
data(sleep)
sleep
aggr(sleep,prop=TRUE,numbers=TRUE)
aggr(sleep,prop=FALSE,numbers=TRUE)
a = sleep
a[is.na]=0
class(a)
a[is.na(a)]=0
a
sleep
head(a)
head(sleep)
complete.cases(f)
complete.cases(a)
sum(complete.cases(a))
nrows(a)
nrow(a)
nrow(sleep)
sum(complete.cases(sleep))
summary(sleep)
sp=boxplot(a$BodyWgt,boxwex=0.7)
a$BodyWgt
f = na.omit(sleep)
f
library(Lahman)
install.packages("Lahman")
library(Lahman)
a = Batting
head(a)
nrows(a)
nrow(a)
summary(a)
library(dplyr)
x = subset(a,G,yearID,teamID,AB,R)
x = select(a,G,yearID,teamID,AB,R)
summary(x)
arrange(x,ab,r)
arrange(x,AB,R)
f = arrange(x,AB,R)
head(f)
f1 = filter(f,AB != 0 & R !=0)
f1
f2 = f1[,1:3]
f2
f2 = f2[1:100,]
f2
names(f2)
names(f2) = c("fo","year","team")
names(f2)
head(f2)
summary(f2,z = sum(fo))
summarise(f2,z = sum(fo))
summarise(f2,sum(fo))
fd = group_by(f2,fo)
fd
summarise(fd,sum(fo))
summarise(fd,n())
summarise(fd,num = n())
n(f2$team)
summarise(f2,n())
summarise(f2$team,n())
class(f2$team)
a = f2$team
a = as.character(a)
f2$team=a
class(f2$team)
summarise(f2$team,n())
summarise(fd,n())
summarise(fd,num = n(),team = team)
summarise(fd,num = n(),team)
fd = group_by(f2,team)
fd
summarise(fd,num = n(),team)
summarise(fd,team)
summarise(fd,num = n())
shapiro.test(f2$fo)
y = rnorm(10,0,1)
y
y = rnorm(1000,0,1)
shapiro.test(y)
y = rnorm(1000,20,1)
shapiro.test(y)
qqnorm(y)
iris
f = iris
f[f$Species == f[49,5]]=1
f[f$Species == f[49,5]]
f[f$Species == "virginica"]
f$Species[f$Species="virginica"] = 3
f$Species[f$Species=="virginica"] = 3
f
f$Species[f$Species == "setosa"] = 3
f = iris
iris$Species
class(f$Species)
f$Species = as.character(f$Species)
class(f$Species)
f$Species[f$Species == "setosa"] = 3
head(f)
f$Species[f$Species == f[51,5]] = 2
f
f$Species[f$Species == f[101,5]] = 1
names(f)
names(f) = c("a","b","c","d","e")
head(f)
z = xlabs(~a+e,data = f)
library(vcd)
z = xlabs(~a+e,data = f)
z = xtabs(~a+e,data = f)
class(z)
chisq.test(z)
chisq.test(~f$a+f$e)
?chisq.test
boxplot.stats(f$a)
library(RODBC)
odbcDataSources()
ch = odbcConnect(llo)
ch = odbcConnect("llo")
odbcTables(ch)
ch1 = odbcConnect("local server")
odbcTables(ch1)
sqlTables(ch)
sqlQuery(ch,"select * from spt_monitor")
boxplot(f2$fo)
boxplot(f2$f1)
boxplot(x)
install.packages( c("htmltools","caTools","bitops","rmarkdown") )
library(rvest)
setwd("C:/Users/magina/Desktop/tem")
getwd()
library(RCrul)
library(RCurl)
library(RCurl)
library(rvest)
url = https://book.douban.com/top250?icn=index-book250-all
url = "https://book.douban.com/top250?icn=index-book250-all"
a = read_html(url)
url = "http://www.imdb.com/search/title?%20count=100&release_date=2016,2016&title_type=feature"
a = read_html(url)
description_data_html <- html_nodes(a'.text-muted')
description_data_html <- html_nodes(a,'.text-muted')
x <- html_nodes(a,'.text-muted')
x
head(x)
y <- html_nodes(a,'.ratings-bar+ .text-muted')
head(y)
html_text(x)
html_text(y)
x1 = html_text(x)
x1
head(x)
head(x1)
getwd
getwd()
url
web = readLines(url)
?web
tem
web
class(web)
